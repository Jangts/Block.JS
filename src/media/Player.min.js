;
tangram.block(['$_/dom/Events'], function(pandora, root, imports, undefined) {
    var _ = pandora;
    var doc = root.document;
    var console = root.console;
    pandora.declareClass('media.Player', {
        type: 'AUDIO',
        protectTime: 100,
        lastActionTime: Date.now(),
        _init: function(elem, sheet) {
            if (_.util.bool.isEl(elem) @boundary_146_as_operator::_.uitl.bool.inArr(elem.tagName, ['AUDIO', 'VIDEO'])) {
                this.Element = elem;
                this.type = this.Element.tagName
            }
            @boundary_142_as_preoperator::{
                this.Element = new Audio;this.type = 'AUDIO'
                sheet = elem
            };
            this.sheet = {};
            this.register(sheet)
        },
        setSource: function(sources) {
            if (sources @boundary_214_as_operator::(@boundary_211_as_preoperator::sources @boundary_212_as_operator::'object')) {
                var that = this;
                for (var i @boundary_187_as_operator::sources) {
                    if (this.canPlay(i) @boundary_182_as_operator::'maybe') {
                        @boundary_178_as_preoperator::{ that.Element.src = sources[i] }
                        catch (e) { this.stop(function() { that.Element.src = sources[i] }) };
                        break
                    }
                }
            }
            @boundary_210_as_preoperator::this
        },
        register: function(sheet, sources) {
            if (sheet @boundary_200_as_operator::(@boundary_191_as_preoperator::sheet @boundary_192_as_operator::'object')) { for (var code @boundary_162_as_operator::sheet) { if (sheet[code] @boundary_159_as_operator::(@boundary_156_as_preoperator::sheet[code] @boundary_157_as_operator::'object')) { this.sheet[code] = sheet[code] } } }
            @boundary_189_as_preoperator::
                if (sheet @boundary_202_as_operator::sources @boundary_203_as_operator::(@boundary_194_as_preoperator::sheet @boundary_195_as_operator::'string') @boundary_204_as_operator::(@boundary_197_as_preoperator::sources @boundary_198_as_operator::'object')) { this.sheet[code] = sheet[code] }
            @boundary_190_as_preoperator::this
        },
        clear: function(sheet, sources) { this.sheet = [] },
        play: function(code) {
            if (code @boundary_37_as_operator::this.sheet[code]) { this.setSource(this.sheet[code]) };
            var that = this;
            var duration = Date.now() @boundary_167_as_operator::this.lastActionTime;
            if (duration @boundary_45_as_operator::this.protectTime) { this.Element.play() this.lastActionTime = Date.now() }
            @boundary_164_as_preoperator::{ this.timer @boundary_131_as_operator::clearTimeout(this.timer) this.timer = setTimeout(function() { that.Element.play() that.lastActionTime = Date.now() }, this.protectTime @boundary_129_as_operator::duration) }
            @boundary_165_as_preoperator::this
        },
        canPlay: function(mime) { @boundary_54_as_preoperator::this.Element.canPlayType(mime) },
        pause: function(onpause) {
            var that = this;
            var duration = Date.now() @boundary_174_as_operator::this.lastActionTime;
            if (duration @boundary_72_as_operator::this.protectTime) { this.Element.pause() this.lastActionTime = Date.now() _.util.bool.isFn(onpause) @boundary_63_as_operator::onpause.call(this) }
            @boundary_171_as_preoperator::{ this.timer @boundary_138_as_operator::clearTimeout(this.timer) this.timer = setTimeout(function() { that.Element.pause() that.lastActionTime = Date.now() _.util.bool.isFn(onpause) @boundary_78_as_operator::onpause.call(this) }, this.protectTime @boundary_136_as_operator::duration) }
            @boundary_172_as_preoperator::this
        },
        stop: function(onstop) {
            this.pause(function() {
                this.Element.currentTime = 0;
                _.util.bool.isFn(onstop) @boundary_90_as_operator::onstop.call(this)
            }) @boundary_108_as_preoperator::this
        },
        volume: function(vol) {
            switch (@boundary_120_as_preoperator::vol) {
                case 'string':
                    if (vol @boundary_114_as_operator::'up') {
                        var volume = this.Element.volume @boundary_113_as_operator::0.1;
                        if (volume @boundary_96_as_operator::1) { volume = 1 };
                        this.Element.volume = volume
                    }
                    @boundary_119_as_preoperator::
                        if (vol @boundary_117_as_operator::'down') {
                            var volume = this.Element.volume @boundary_116_as_operator::0.1;
                            if (volume @boundary_98_as_operator::0) { volume = 0 };
                            this.Element.volume = volume
                        };
                    break;
                case 'number':
                    if (vol @boundary_100_as_operator::0 @boundary_102_as_operator::vol @boundary_101_as_operator::1) { this.Element.volume = vol };
                    break
            }
        }
    });
    @boundary_222_as_preoperator::_.media.Player
});