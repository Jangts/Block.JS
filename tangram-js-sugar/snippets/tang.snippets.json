{
    "class …": {
        "prefix": "class",
        "body": [
            "class ${1:.ClassName} ${2:extends ${3:AnotherClass}} {",
            "\t$0",
            "}",
            ""
        ],
        "description": "Class definition"
    },
    "construct _init": {
        "prefix": "_init(",
        "body": [
            "_init(${1: var}) {",
            "\t\\$this->${2:var} = $${3:var};$0",
            "}"
        ]
    },
    "reg …": {
        "prefix": "reg",
        "body": [
            "reg ${1: objName} {",
            "\t$0",
            "}",
            ""
        ]
    },
    "extends …": {
        "prefix": "extend",
        "body": [
            "extends ${1: pandora.} {",
            "\t$0",
            "}",
            ""
        ],
        "description": "Definition"
    },
    "pandora.…": {
        "prefix": "pandora",
        "body": "pandora.$0",
        "description": "pandora...."
    },
    "pandora(…, …)": {
        "prefix": "pandora(",
        "body": [
            "pandora('$1', ${2: value});",
            "$0"
        ]
    },
    "extends(…, …)": {
        "prefix": "ext(",
        "body": [
            "pandora.extend(${1: pandora.}, ${2:objName});",
            "$0"
        ],
        "description": "Definition"
    },
    "do … while …": {
        "prefix": "do",
        "body": [
            "do {",
            "\t${0:# code...}",
            "} while (${1:${2:a} <= ${3:10}});"
        ],
        "description": "Do-While loop"
    },
    "while …": {
        "prefix": "while",
        "body": [
            "while (${1:${2:a} <= ${3:10}}) {",
            "\t${0:# code...}",
            "}"
        ],
        "description": "While-loop"
    },
    "if …": {
        "prefix": "if",
        "body": [
            "if (${1:condition}) {",
            "\t${0:# code...}",
            "}"
        ],
        "description": "If block"
    },
    "if … else …": {
        "prefix": "ifelse",
        "body": [
            "if (${1:condition}) {",
            "\t${2:# code...}",
            "} else {",
            "\t${3:# code...}",
            "}",
            "$0"
        ],
        "description": "If Else block"
    },
    "$… = ( … ) ? … : …": {
        "prefix": "if?",
        "body": "${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b} ;",
        "description": "Ternary conditional assignment"
    },
    "else …": {
        "prefix": "else",
        "body": [
            "else {",
            "\t${0:# code...}",
            "}"
        ],
        "description": "Else block"
    },
    "elseif …": {
        "prefix": "elseif",
        "body": [
            "elseif (${1:condition}) {",
            "\t${0:# code...}",
            "}"
        ],
        "description": "Elseif block"
    },
    "for …": {
        "prefix": "for",
        "body": [
            "for (${1:i}=${2:0}; ${1:i} < $3; ${1:i}++) { ",
            "\t${0:# code...}",
            "}"
        ],
        "description": "For-loop"
    },
    "each …": {
        "prefix": "each",
        "body": [
            "each (${1:variable} as ${2:index} ${3:, ${4:item}}) {",
            "\t${0:# code...}",
            "}"
        ],
        "description": "Foreach loop"
    },
    "switch …": {
        "prefix": "switch",
        "body": [
            "switch (\\${1:variable}) {",
            "\tcase '${2:value}':",
            "\t\t${3:# code...}",
            "\t\tbreak;",
            "\t$0",
            "\tdefault:",
            "\t\t${4:# code...}",
            "\t\tbreak;",
            "}"
        ],
        "description": "Switch block"
    },
    "case …": {
        "prefix": "case",
        "body": [
            "case '${1:value}':",
            "\t${0:# code...}",
            "\tbreak;"
        ],
        "description": "Case Block"
    }
}